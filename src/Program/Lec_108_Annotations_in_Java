------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Annotations in Java :-

    1)  Annotations provides metadata to class/methods.
    2)  Annotations start with '@'.
    3)  Annotations are helpful for detecting errors. Example : @override annotations will make sure that there
        are no typos while overriding a method.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Important Annotations in Java :-

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) @Override :-
        a) This annotation makes sure that the sub class method is successfully overriding the parent class method.
        b) While overriding a class, there is a chance of typing errors or spelling mistakes.
           In such cases, the method will not get overridden and you will get an error.
        c) Override exception helps us to encounter such situations by extracting a warning from the compiler.

2) @Deprecated :-
        a) This annotation is used to mark a deprecated method.
        b) If developer uses the deprecated method then the compiler generated a warning.
        c) There high chance of removal of deprecated methods in future versions therefore it is better to not use them.

3) @SuppressWarnings("deprecation") :-
        a) This annotation helps us to supress some warnings that are being generated by compiler.

4) @FunctionInterface :-
        a) An interface which contains only one abstract method is known as functional interface.
        b) @FunctionInterface annotation helps us to make sure that a functional interface is not having more than one abstract method.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------